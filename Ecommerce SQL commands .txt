
CREATE TABLE CUSTOMER 
(
    CustomerID INT NOT NULL,
    FullName VARCHAR(30) NOT NULL,
    UserName VARCHAR(15) NOT NULL,
    Password VARCHAR (15) NOT NULL,
    Bdate DATE,
    Email VARCHAR(30) NOT NULL,
    Address VARCHAR(50) NOT NULL,
    Gender CHAR,
    PhoneNumber INT NOT NULL,
    PostalCode CHAR(5) NOT NULL,
    PRIMARY KEY (CustomerID),
    UNIQUE (UserName)
);
CREATE TABLE SUPPLIER
(
    SupplierID  INT           NOT NULL,
    CompanyName VARCHAR(15),
    JobTitle    VARCHAR(15)   NOT NULL,
    FullName    VARCHAR(30)   NOT NULL,
    UserName    VARCHAR(15)   NOT NULL,
    Password    VARCHAR(15)   NOT NULL,
    Bdate DATE,
    Email       VARCHAR(30)   NOT NULL,
    Address     VARCHAR(40)   NOT NULL,
    Gender      CHAR,
    PhoneNumber INT       NOT NULL,
    PRIMARY KEY(SupplierID),
    UNIQUE (UserName)
);

CREATE TABLE CATEGORY 
(
    CategoryID      INT            NOT NULL,
    CategoryName    VARCHAR(15)    NOT NULL,
    Description     VARCHAR2(1000),
    Active          CHAR            NOT NULL,
    PRIMARY KEY (CategoryID),
    UNIQUE(CategoryName)
);
CREATE TABLE PRODUCT 
(
    ProductID           INT         NOT NULL ,
    ProductName         VARCHAR(15) NOT NULL,
    CategoryID          INT          NOT NULL,
    Description         VARCHAR2(1000) ,
    QantityDate         DATE        NOT NULL,
    StartQuantity       INT         NOT NULL,
    AvailableQuantity   INT         NOT NULL,
    PRIMARY KEY (ProductID),
    UNIQUE(ProductName) ,
    FOREIGN KEY (CategoryID) REFERENCES CATEGORY (CategoryID)
);
CREATE TABLE PRODUCT_PRICING
(   ProductID           INT      NOT NULL ,
    PriceID             INT      NOT NULL,
    SellPrice           FLOAT    NOT NULL,
    BuyPrice            FLOAT    NOT NULL,
    StartDate           DATE     NOT NULL,
    EndDate             DATE     NOT NULL ,
    PRIMARY KEY (PriceID),
    FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID)
);
CREATE TABLE ORDERS 
(
    OrderID             INT         NOT NULL,
    OrderNumber         INT         NOT NULL,
    Decription          VARCHAR2(1000),
    OrderDate           DATE        NOT NULL ,
    DeliveryDate        DATE        NOT NULL,
    PaymentMethod       VARCHAR(15) NOT NULL,
    CustomerID          INT         NOT NULL,
    PRIMARY KEY (OrderID),
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER (CustomerID)
 
);
CREATE TABLE ORDER_DETAILS

(  
    DetailsID           INT          NOT NULL,
    OrderID             INT          NOT NULL,
    ProductID           INT          NOT NULL ,
    Quantity            INT             NOT NULL ,
    TotalPrice          FLOAT        NOT NULL,
    PRIMARY KEY(DetailsID),
    FOREIGN KEY (OrderID)REFERENCES ORDERS(OrderID),
    FOREIGN KEY (ProductID)REFERENCES PRODUCT(ProductID)
);
CREATE TABLE PURCHASE_ORDER
(
    PurchaseID          INT         NOT NULL ,
    PurchasedQuantity   INT         NOT NULL,
    PurchasedDate       DATE        NOT NULL ,
    SupplierID          INT         NOT NULL,
    ProductID           INT         NOT NULL ,
    PRIMARY KEY (PurchaseID),
    FOREIGN KEY (SupplierID) REFERENCES SUPPLIER (SupplierID),
    FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID)
);
CREATE TABLE FEEDBACK_REVIEWS
(
    FeedbackID           INT         NOT NULL,
    FeedbackDate         DATE        NOT NULL,
    FeedbackComment      VARCHAR2(1000),
    ProductID           INT          NOT NULL ,
    CustomerID          INT          NOT NULL,
    PRIMARY KEY (FeedbackID),
    FOREIGN KEY (CustomerID)REFERENCES CUSTOMER(CustomerID),
    FOREIGN KEY (ProductID)REFERENCES PRODUCT(ProductID)
    
);
CREATE TABLE RETURNS
(
    ReturnID         INT NOT NULL,
    ReturnDate       DATE  NOT NULL,
    PRIMARY KEY (ReturnID)
);
CREATE TABLE RETURNED_PRODUCT
(   ReturnID            INT         NOT NULL,
    DetailsID           INT          NOT NULL,
    ReturnedQuantity    INT         NOT NULL,
    
    PRIMARY KEY (ReturnID,DetailsID),
    FOREIGN KEY (ReturnID) REFERENCES RETURNS (ReturnID),
    FOREIGN KEY (DetailsID) REFERENCES ORDER_DETAILS (DetailsID)
   
);